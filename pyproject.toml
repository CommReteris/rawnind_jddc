[project]
name = "rawnind"
version = "0.2.0"
description = "Add your description here"
requires-python = ">=3.13"
dependencies = [
    "colour-science>=0.4.6",
    "configargparse>=1.7.1",
    "exif>=1.6.1",
    "matplotlib>=3.10.3",
    "opencv-contrib-python>=4.12.0.88",
    "openexr>=3.3.5",
    "openimageio>=3.0.6.1",
    "piexif>=1.1.3",
    "piqa>=1.3.2",
    "psutil>=5.9.0",
    "ptflops>=0.7.5",
    "pypng>=0.20220715.0",
    "pytorch-msssim>=1.0.0",
    "pyyaml>=6.0.2",
    "rawpy>=0.25.1",
    "requests>=2.32.5",
    "scikit-image>=0.25.2",
    "scipy-stubs==1.16.2.0",
    "torch>=2.8.0",
    "torchvision>=0.23.0",
    "tqdm>=4.67.1",
    "trio>=0.31.0",
]
[tool.uv.sources]
torch = [
    { index = "pytorch-cu129", marker = 'platform_machine != "aarch64"' }
]
torchvision = [
    { index = "pytorch-cu129" },
]
# Intel GPU support relies on `pytorch-triton-xpu`, which should also be installed from the PyTorch index
# (and included in `project.dependencies`).
pytorch-triton-xpu = [
    { index = "pytorch-xpu", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
]
# ROCm6 support relies on `pytorch-triton-rocm`, which should also be installed from the PyTorch index
# (and included in `project.dependencies`).
pytorch-triton-rocm = [
    { index = "pytorch-rocm", marker = "sys_platform == 'linux'" },
]
rawnind = { workspace = true }

[[tool.uv.index]]
name = "pytorch-cu129"
url = "https://download.pytorch.org/whl/cu129"
explicit = true

[[tool.uv.index]]
name = "pytorch-xpu"
url = "https://download.pytorch.org/whl/xpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-rocm"
url = "https://download.pytorch.org/whl/rocm6.3"
explicit = true

[dependency-groups]
test = [
    "pylint>=3.3.8",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "configargparse",
    "trio>=0.31.0",
]
dev = [
    "ipython",
]

[tool.pytest.ini_options]
testpaths = [
    "src/rawnind/tests",
]
# python_files = "test_*.py"
# python_classes = "Test*"
# python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--cov=src/rawnind",
    "--cov-fail-under=0",
    "-v",
]
markers = [
    "acceptance: mark acceptance tests for refactor guardrails",
    "model_type(type): mark tests for specific model types like 'dc' or 'denoise'",
    "input_type(type): mark tests for input formats like 'bayer' or 'prgb'",
    "fast: mark fast tests using null dataloaders",
    "integration: mark tests requiring real datasets",
]
